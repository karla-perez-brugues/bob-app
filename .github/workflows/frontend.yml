name: Frontend CI

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'front/**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: front/package.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

  test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: front/package.json

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm test --code-coverage

      - name: Code coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ${{ github.workspace }}/front/coverage/bobapp/**

      - name: Scan SonarCloud
        uses: SonarSource/sonarqube-scan-action@master
        with:
          projectBaseDir: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_BRANCH_NAME: main

  docker:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t bob-app-front .
          docker tag bob-app-front ${{ vars.DOCKER_USERNAME }}/bob-app-front:latest
          docker push ${{ vars.DOCKER_USERNAME }}/bob-app-front:latest